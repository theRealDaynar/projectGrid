<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDumbEyeThing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_speed = room_speed*7
tele_true_x = x
tele_true_y = y
tele_speed = 0
tele_dir = 0
tele_x = x
tele_y = y
hp = 2
tele_turn_speed = turn_speed/40
image_speed = .2
alarm[0] = turn_speed
alarm[1] = tele_turn_speed
pulse_timer = room_speed/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_set(grid_map,x/64,y/64,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage player
if distance_to_object(oHero)&lt;=64
oHero.hp--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tele_speed = 0
tele_y = tele_true_y
tele_x = tele_true_x
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move teleport redicule
tele_speed = 0
tele_y = tele_true_y
tele_x = tele_true_x
var tele_x_previous = tele_x
var tele_y_previous = tele_y
    var i = 0
    while(i &lt; 100)
    {
    randomize()
    if random(1) &gt; .8
    {
        if oHero.x != tele_x or oHero.y != tele_y
        if abs(oHero.x - tele_x) &gt; abs(oHero.y - tele_y)
            if oHero.x &gt; tele_x
                tele_x+=64
            else
                tele_x-=64
        else
            if oHero.y &gt; tele_y
                tele_y+=64
            else
                tele_y-=64
    }
    else
    switch(irandom(3))
    {
        case 0:
            tele_y-=64;
        break;
        case 1:
            tele_y+=64;
        break;
        case 2:
            tele_x-=64;
        break;
        case 3:
            tele_x+=64;
    }
    if /*(ds_grid_get(grid_map,tele_x/64,tele_y/64) != 0 and ds_grid_get(grid_map,tele_x/64,tele_y/64) != oHero.id) or */ tele_x &lt; 0  or tele_y &lt; 0 or tele_x &gt;= 64*16 or tele_y &gt;= 64*10 
    {
        tele_y = tele_y_previous
        tele_x = tele_x_previous
    }
    else
    {
        //ds_grid_set(grid_map,tele_x_previous/64,tele_y_previous/64,0)
        //ds_grid_set(grid_map,tele_x/64,tele_y/64,id)
        break;
    }
    i++
    }
if tele_turn_speed*2 &lt; alarm[0]
    alarm[1] = tele_turn_speed
else
    alarm[2] = tele_turn_speed
if tele_x!=tele_x_previous or tele_y!=tele_y_previous
{
    tele_true_x = tele_x
    tele_true_y = tele_y
    tele_speed = 64/tele_turn_speed
    tele_dir = point_direction(tele_x_previous,tele_y_previous,tele_true_x,tele_true_y)
    tele_y = tele_y_previous
    tele_x = tele_x_previous
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///teleport
if ds_grid_get(grid_map,tele_true_x/64,tele_true_y/64) = 0
{
    x = tele_true_x
    y = tele_true_y
    ds_grid_set(grid_map,xprevious/64,yprevious/64,0)
    ds_grid_set(grid_map,x/64,y/64,id)
    alarm[0] = turn_speed
    alarm[1] = tele_turn_speed
    alarm[3] = pulse_timer
}
else
    alarm[0] = tele_turn_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tele_x += lengthdir_x(tele_speed,tele_dir)
tele_y += lengthdir_y(tele_speed,tele_dir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_alarm,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[3]&gt;0
{
    var per = (pulse_timer-alarm[3])/pulse_timer
    for(var i = 0; i &lt; 5; i ++)
        draw_rectangle_colour(x+32-(96-i*5)*per,y+32-(96-i*5)*per,x+32+(96-i*5)*per,y+32+(96-i*5)*per,c_purple,c_purple,c_purple,c_purple,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var alpha = .3
if alarm[0] &lt; room_speed/4
alpha = 1
var d = point_distance(x + 32,y + 32,tele_x + 32,tele_y + 32)
draw_set_alpha(alpha)
for(var i = 1; i &lt; 6; i++)
    draw_circle_colour(x+32+lengthdir_x(d/6*i, point_direction(x+32,y+32,32+tele_x,32+tele_y)),32+y+lengthdir_y(d/6*i, point_direction(x+32,32+y,32+tele_x,32+tele_y)),random(7) + 3.5,c_fuchsia,c_red,false)
draw_set_alpha(1)
draw_sprite_ext(sAttackPossibility,image_index,tele_x,tele_y,1,1,0,c_fuchsia,alpha)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
