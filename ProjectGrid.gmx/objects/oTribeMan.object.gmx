<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTribeMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_speed = room_speed*1.5
alarm[0] = turn_speed
true_x = x
true_y = y
image_speed = 0

orbit_speed = room_speed/6
alarm[2] = orbit_speed
orb_hspeed = 0
orb_vspeed = 0
true_orb_x = 64
true_orb_y = 0
orb_x = true_orb_x + x
orb_y = true_orb_y + y
orb_xprevious = orb_x
orb_yprevious = orb_y
orb_dir = 1
orb_angle = 0
orb_dist = 1
anim = 0
atk_timer = orbit_speed * 26
alarm[3] = atk_timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_set(grid_map,true_x/64,true_y/64,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if orb_dist = 1
{
 if ds_grid_get(grid_map,(x + true_orb_x*2)/64,(y + true_orb_y*2)/64)=0
    {
        orb_dist = 2
        alarm[3] = atk_timer
        if orb_hspeed != 0
        {
                true_orb_y*=orb_dist
                //if orb_dist &gt; 1
                    orb_vspeed = sign(true_orb_y)*64/alarm[2]
                //else
                    //orb_vspeed = -sign(true_orb_y)*64/alarm[2]
        }
        else if orb_vspeed != 0
        {
                true_orb_x*=orb_dist
                //if orb_dist &gt; 1
                    orb_hspeed = sign(true_orb_x)*64/alarm[2]
                //else
                    //orb_hspeed = -sign(true_orb_x)*64/alarm[2]
        }
    }
    else
        alarm[3] = atk_timer/2
}
else
{
    orb_dist = 1
    alarm[3] = atk_timer
    if orb_hspeed != 0
{
    true_orb_y/=2
    //if orb_dist &gt; 1
        //orb_vspeed = -sign(true_orb_y)*64/alarm[2]
    //else
        orb_vspeed = -sign(true_orb_y)*64/alarm[2]
}
else if orb_vspeed != 0
{
    true_orb_x/=2
    //if orb_dist &gt; 1
        //orb_hspeed = -sign(true_orb_x)*64/alarm[2]
    //else
        orb_hspeed = -sign(true_orb_x)*64/alarm[2]
}
event_perform(ev_alarm,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>orb_x = true_orb_x + x
orb_y = true_orb_y + y
orb_vspeed=0
orb_hspeed=0
alarm[2]=orbit_speed/orb_dist
if orb_dir = 1
{
if round(orb_x/64) = round((x + 64 * orb_dist)/64) and round((y - 64 * orb_dist)/64) &lt; round(orb_y/64)
{
    orb_vspeed = -64/alarm[2]
    true_orb_y -= 64
}
else if round(orb_x/64) &gt; round((x - 64 * orb_dist)/64) and round((y - 64 * orb_dist)/64) = round(orb_y/64)
{
    orb_hspeed = -64/alarm[2]
    true_orb_x -= 64
}
else if round(orb_x/64) = round((x - 64 * orb_dist)/64) and round((y + 64 * orb_dist)/64) &gt; round(orb_y/64)
{
    orb_vspeed = 64/alarm[2]
    true_orb_y += 64
}
else if round(orb_x/64) &lt; round((x + 64 * orb_dist)/64) and round((y + 64 * orb_dist)/64) = round(orb_y/64)
{
    orb_hspeed = 64/alarm[2]
    true_orb_x += 64
}
}
else
{
if round(orb_x/64) = round((x + 64 * orb_dist)/64) and round((y + 64 * orb_dist)/64) &gt; round(orb_y/64)
{
    orb_vspeed = 64/alarm[2]
    true_orb_y += 64
}
else if round(orb_x/64) &lt; round((x + 64 * orb_dist)/64) and round((y - 64 * orb_dist)/64) = round(orb_y/64)
{
    orb_hspeed = 64/alarm[2]
    true_orb_x += 64
}
else if round(orb_x/64) = round((x - 64 * orb_dist)/64) and round((y - 64 * orb_dist)/64) &lt; round(orb_y/64)
{
    orb_vspeed = -64/alarm[2]
    true_orb_y -= 64
}
else if round(orb_x/64) &gt; round((x - 64 * orb_dist)/64) and round((y + 64 * orb_dist)/64) = round(orb_y/64)
{
    orb_hspeed = -64/alarm[2]
    true_orb_x -= 64
}
}
if ds_grid_get(grid_map,(true_x + true_orb_x)/64,(true_y + true_orb_y)/64)!=0
{
    if orb_dir = 1
        orb_dir = -1
    else
        orb_dir = 1 
}
/*
if round(orb_x/64) = x + 64 and round(orb_y/64) &lt;= y
    orb_vspeed = alarm[2]/orbit_speed
else if round(orb_x/64) = x - orb_max_x and round(orb_y/64) &lt;= y
    orb_vspeed -= alarm[2]/orbit_speed
else if round(orb_y/64) = y + orb_max_y and round(orb_x/64) &lt;= x
    orb_hspeed = alarm[2]/orbit_speed
else if round(orb_y/64) = y - orb_max_y and round(orb_x/64) &lt;= x
    orb_hspeed -= alarm[2]/orbit_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0
x = true_x
y = true_y
xprevious = true_x
yprevious = true_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0
x = true_x
y = true_y
xprevious = true_x
yprevious = true_y
if orb_dist = 1
{
    var i = 0
    while(i &lt; 4)
    {
    switch(irandom(3))
    {
        case 0:
            y-=64;
        break;
        case 1:
            y+=64;
        break;
        case 2:
            x-=64;
        break;
        case 3:
            x+=64;
    }
    if ds_grid_get(grid_map,x/64,y/64) != 0  or  x &lt; 0  or y &lt; 0 or x &gt;= 64*16 or y &gt;= 64*10 or ds_grid_get(grid_map,(x + true_orb_x)/64,(y + true_orb_y)/64)!=0
    {
        y = yprevious
        x = xprevious
    }
    else
    {
        ds_grid_set(grid_map,xprevious/64,yprevious/64,0)
        ds_grid_set(grid_map,x/64,y/64,id)
        break;
    }
    i++
    }
alarm[0] = turn_speed
if x!=xprevious or y!=yprevious
{
    true_x = x
    true_y = y
        speed = 64/(alarm[0]/2)
        alarm[1] = alarm[0]/2
    direction = point_direction(xprevious,yprevious,true_x,true_y)
    y = yprevious
    x = xprevious
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>orb_x += hspeed + orb_hspeed
orb_y += vspeed + orb_vspeed
orb_angle+=5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim+=0.5
if (anim&gt;7) {anim=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sTribeManOrb,anim,orb_x +32,orb_y+32,1,1,orb_angle,c_white,1)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
