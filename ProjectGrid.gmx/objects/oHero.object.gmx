<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1_man</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_speed = room_speed/2.5
move_cooldown = false
key_log = ds_list_create()
image_speed = .5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_cooldown = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///key press checks
//move
if keyboard_check_pressed(ord("W")){
    update_key_log(1,0)
}else if keyboard_check_released(ord("W")){
    update_key_log(0,0)
}
if keyboard_check_pressed(ord("S")){
    update_key_log(1,1)
}else if keyboard_check_released(ord("S")){
    update_key_log(0,1)
}
if keyboard_check_pressed(ord("A")){
    update_key_log(1,2)
}else if keyboard_check_released(ord("A")){
    update_key_log(0,2)
}
if keyboard_check_pressed(ord("D")){
    update_key_log(1,3)
}else if keyboard_check_released(ord("D")){
    update_key_log(0,3)
}
//attack
if keyboard_check_pressed(vk_up){
    update_key_log(1,4)
}else if keyboard_check_released(vk_up){
    update_key_log(0,4)
}
if keyboard_check_pressed(vk_down){
    update_key_log(1,5)
}else if keyboard_check_released(vk_down){
    update_key_log(0,5)
}
if keyboard_check_pressed(vk_left){
    update_key_log(1,6)
}else if keyboard_check_released(vk_left){
    update_key_log(0,6)
}
if keyboard_check_pressed(vk_right){
    update_key_log(1,7)
}else if keyboard_check_released(vk_right){
    update_key_log(0,7)
}

randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if move_cooldown = false and ds_list_size(key_log) &gt; 0
{
    switch(ds_list_find_value(key_log, ds_list_size(key_log)-1))
    {
    case 0:
        y-=64;
    break;
    case 1:
        y+=64;
    break;
    case 2:
        x-=64;
    break;
    case 3:
        x+=64;
    break;
    case 4:
        instance_create(x,y - 64,oAttackParticle)
    break;
    case 5:
        instance_create(x,y + 64,oAttackParticle)
    break;
    case 6:
        instance_create(x - 64,y,oAttackParticle)
    break;
    case 7:
        instance_create(x + 64,y,oAttackParticle)
    }
    if ds_grid_get(grid_map,x/64,y/64) != 0 or  x &lt; 0  or y &lt; 0 or x &gt;= 64*16 or y &gt;= 64*10 
    {
        y = yprevious
        x = xprevious
    }
    else
    {
        if x != xprevious or y != yprevious
        {
            ds_grid_set(grid_map,xprevious/64,yprevious/64,0)
            ds_grid_set(grid_map,x/64,y/64,id)
        }
        move_cooldown = true
        alarm[0] = turn_speed
    }
}
if !instance_exists(oEnemy)
{
    instance_create(448,64,oEnemy)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite_ext(sAttackPossibility,0,x,y + 64,1,1,0,c_white,.3)
draw_sprite_ext(sAttackPossibility,0,x,y - 64,1,1,0,c_white,.3)
draw_sprite_ext(sAttackPossibility,0,x + 64,y,1,1,0,c_white,.3)
draw_sprite_ext(sAttackPossibility,0,x - 64,y,1,1,0,c_white,.3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
