<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_speed = room_speed
alarm[0] = turn_speed
ramming = false
true_x = x
true_y = y
image_speed = 0
hp = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0
x = true_x
y = true_y
xprevious = true_x
yprevious = true_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0
x = true_x
y = true_y
xprevious = true_x
yprevious = true_y
if ramming = false
{
if oHero.x = x
{
    var v = sign(oHero.y - y)
    ramming = 2 + v
    var i = y/64 + v
    while( i != oHero.y/64)
    {
        if ds_grid_get(grid_map,x/64,i) != 0
        {
            ramming = false
            break;
        }
        i+=v
    } 
}
else if oHero.y = y
{
    var v = sign(oHero.x - x)
    ramming = 3 + v
    var i = x/64+ v
    while( i != oHero.x/64)
    {
        if ds_grid_get(grid_map,i,y/64) != 0
        {
            ramming = false
            break;
        }
        i+=v
    } 
}
if ramming = false
{
    var i = 0
    while(i &lt; 4)
    {
    switch(irandom(3))
    {
        case 0:
            y-=64;
        break;
        case 1:
            y+=64;
        break;
        case 2:
            x-=64;
        break;
        case 3:
            x+=64;
    }
    if ds_grid_get(grid_map,x/64,y/64) != 0  or  x &lt; 0  or y &lt; 0 or x &gt;= 64*16 or y &gt;= 64*10 
    {
        y = yprevious
        x = xprevious
    }
    else
    {
        ds_grid_set(grid_map,xprevious/64,yprevious/64,0)
        ds_grid_set(grid_map,x/64,y/64,id)
        break;
    }
    i++
    }
}
alarm[0] = turn_speed
}else
{
switch(ramming)
{
    case 1:
        y-=64;
    break;
    case 3:
        y+=64;
    break;
    case 2:
        x-=64;
    break;
    case 4:
        x+=64;
}
if ds_grid_get(grid_map,x/64,y/64) != 0 or x &lt; 0 or y &lt; 0 or x &gt;= 64*16 or y &gt;= 64*10 
{
    y = yprevious
    x = xprevious
    ramming = false
}
else
{
    ds_grid_set(grid_map,xprevious/64,yprevious/64,0)
    ds_grid_set(grid_map,x/64,y/64,id)
}
alarm[0] = turn_speed/6
}
if x!=xprevious or y!=yprevious
{
    true_x = x
    true_y = y
    if ramming = false
    {
        speed = 64/(alarm[0]/2)
        alarm[1] = alarm[0]/2
    }
    else
    {
        speed = 64/alarm[0]
    }
    direction = point_direction(xprevious,yprevious,true_x,true_y)
    y = yprevious
    x = xprevious
}
if (ramming=false) {image_index=0} else {image_index=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_set(grid_map,x/64,y/64,id)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
